#端口号
server:
  port: 8088
  servlet:
    context-path: /api
# DataSource Config
spring:
  profiles:
    # 默认使用开发环境
    active: dev
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      #2.连接池配置
      #初始化连接池的连接数量 大小，最小，最大
      initial-size: 10
      min-idle: 10
      max-active: 10
      #配置获取连接等待超时的时间
      max-wait: 60000
      #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 30000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 是否缓存preparedStatement，也就是PSCache  官方建议MySQL下建议关闭   个人建议如果想用SQL防火墙 建议打开
      pool-prepared-statements: true
      max-pool-prepared-statement-per-connection-size: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall
      #3.基础监控配置
      web-stat-filter:
        enabled: true
        url-pattern: /*
        #设置不统计哪些URL
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
        session-stat-enable: true
        session-stat-max-count: 100
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: true
        #设置监控页面的登录名和密码
        login-username: admin
        login-password: admin
      # Spring监控配置，说明请参考Druid Github Wiki，配置_Druid和Spring关联监控配置
      # Spring监控AOP切入点，如x.y.z.service.*,配置多个英文逗号分隔
      aop-patterns: com..*
  #flyway数据库版本管理
  flyway:
    clean-disabled: true #禁用clean操作
    enabled: false #使flyway生效
    baseline-on-migrate: true #初始化时如果不存在迁移记录表，默认新建一个
    out-of-order: false #防止开发环境下漏掉没来得及apply的文件，产品环境最好设为false
    locations: classpath:/dbScript
  redis:
  #集群模式
    cluster:
      nodes: 130.1.14.125:6049,130.1.14.126:6049,130.1.14.127:6049,130.1.14.128:6049,130.1.14.129:6049,130.1.14.130:6049
      max-redirects: 3  # 获取失败 最大重定向次数
    password: rxtd@123

#mybatis
mybatis-plus:
  mapper-locations: classpath:/mapper/**/*Mapper.xml
  # pojo包地址，多个使用逗号隔开，不能使用*和classpath
  type-aliases-package: com.zdinit.icecream.auth.vo
  configuration:
#    #输出格式化sql，但是结果也会输出，过于庞大
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl





client:
  ip: 127.0.0.1
  port: 5000

